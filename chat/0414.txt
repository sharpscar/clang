리드미
readme.txt

개발을 했을땐 모든 유저가 개발자가 아니기 때문에
이 프로그램을 어떻게 사용해야 하는지 안내하는 파일!

사용자 경험 UX 마치 ctrl +c, ctrl +v  
모든개발자가 적어도 한번이상 누를수밖에 없는 
그런키 같은게 아니라면 readme파일에 내용을 기록해놔야 사용할수 있다


data 와 information
information 의사결정에 유용하게 활용할수 있도록 데이터를 처리한 결과

data는 원석 information은 보석이다.



CREATE TABLE DEPT ( DEPTNO DECIMAL(2), DNAME VARCHAR(14), LOC VARCHAR(13), CONSTRAINT PK_DEPT PRIMARY KEY (DEPTNO));​
부서테이블 생성!

INSERT INTO DEPT VALUES (10,'ACCOUNTING','NEW YORK'), (20,'RESEARCH','DALLAS'), (30,'SALES','CHICAGO'), (40,'OPERATIONS','BOSTON');​
부서테이블에 부서정보를 넣어라!

CREATE TABLE EMP ( EMPNO DECIMAL(4), ENAME VARCHAR(10), JOB VARCHAR(9), MGR DECIMAL(4), HIREDATE DATE, SAL DECIMAL(7,2), COMM DECIMAL(7,2), DEPTNO DECIMAL(2), CONSTRAINT PK_EMP PRIMARY KEY (EMPNO), CONSTRAINT FK_DEPTNO FOREIGN KEY (DEPTNO) REFERENCES DEPT(DEPTNO));​
사원테이블 생성!

INSERT INTO EMP VALUES (7369,'SMITH','CLERK',7902,'1980-12-17',800,NULL,20), (7499,'ALLEN','SALESMAN',7698,'1981-02-20',1600,300,30), (7521,'WARD','SALESMAN',7698,'1981-02-21',1250,500,30), (7566,'JONES','MANAGER',7839,'1981-04-02',2975,NULL,20), (7654,'MARTIN','SALESMAN',7698,'1981-09-28',1250,1400,30), (7698,'BLAKE','MANAGER',7839,'1981-05-01',2850,NULL,30), (7782,'CLARK','MANAGER',7839,'1981-06-09',2450,NULL,10), (7788,'SCOTT','ANALYST',7566,'1987-07-13',3000,NULL,20), (7839,'KING','PRESIDENT',NULL,'1981-11-17',5000,NULL,10), (7844,'TURNER','SALESMAN',7698,'1981-09-08',1500,0,30), (7876,'ADAMS','CLERK',7788,'1987-07-13',1100,NULL,20), (7900,'JAMES','CLERK',7698,'1981-12-03',950,NULL,30), (7902,'FORD','ANALYST',7566,'1981-12-03',3000,NULL,20), (7934,'MILLER','CLERK',7782,'1982-01-23',1300,NULL,10);​
사원테이블에 사원정보를 넣어라


SHOW COLUMNS FROM EMP;
사원테이블의 필드들을 보여줘!

DESC EMP;
사원테이블의 명세를 보여줘!

SELECT * FROM EMP;
사원테이블의 모든 내용을 보여줘

SELECT EMPNO, ENAME, JOB FROM EMP;
사원테이블에 사원번호, 이름, 직업 필드만 보여줘

SELECT * FROM DEPT WHERE DNAME ='RESEARCH';
부서 테이블에 DNAME 필드가 RESEARCH인 내용만 보여줘 

SELECT * FROM EMP WHERE HIREDATE > '1981-01-01';
사원테이블에 고용된날짜가 81년 1월 1일 이후~현재 인 사람을보여줘

SELECT * FROM EMP WHERE ENAME LIKE '%AR%';
사원테이블에 ENAME 이름에 AR자가 들어간 사람을보여줘
(%% 기호는 앞뒤로 몇글자가 들어가든 상관없다는 뜻)
(_ 언더바는 캐릭터 하나를 뜻함 )

SELECT * FROM EMP  WHERE ENAME = 'ALLEN' XOR SAL =1100;
xor은 자주쓰이진 않지만 쓰일일이 아예없지는 않을수도
xor는 a b 둘다 1이거나 0일때 False를 뱉는다. 
1, 0 True 0, 1 True 
0, 0 False 1,1 False